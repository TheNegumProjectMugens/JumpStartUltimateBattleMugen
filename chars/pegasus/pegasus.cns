; Blank's constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more about the cns.

[Data]
;Amount of life to start with
life = 200
;attack power (more is stronger)
attack = 100
;defensive power (more is stronger)
defence = 10
;Percentage to increase defense everytime player is knocked down
fall.defence_up = 50
;Time which player lies down for, before getting up
liedown.time = 60
;Number of points for juggling
airjuggle = 15
;Default hit spark number for HitDefs
sparkno = 2
;Default guard spark number
guard.sparkno = 40
;1 to enable echo on KO
KO.echo = 0
;Volume offset (negative for softer)
volume = 0
;Variables with this index and above will not have their values
;reset to 0 between rounds or matches. There are 60 int variables,
;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
;If omitted, then it defaults to 60 and 40 for integer and float
;variables repectively, meaning that none are persistent, i.e. all
;are reset. If you want your variables to persist between matches,
;you need to override state 5900 from common1.cns.
IntPersistIndex = 60
FloatPersistIndex = 40

[Size]
xscale = 1           ;Horizontal scaling factor.
yscale = 1           ;Vertical scaling factor.
ground.back = 15     ;Player width (back, ground)
ground.front = 16    ;Player width (front, ground)
air.back = 12        ;Player width (back, air)
air.front = 12       ;Player width (front, air)
height = 60          ;Height of player (for opponent to jump over)
attack.dist = 160    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = -5, -90   ;Approximate position of head
mid.pos = -5, -60    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 3      ;Walk forward
walk.back = -2.6     ;Walk backward
run.fwd  = 6, 0    ;Run forward (x, y)
run.back = -5,-4 ;Hop backward (x, y)
jump.neu = 0,-10    ;Neutral jumping velocity (x, y)
jump.back = -3    ;Jump back Speed (x, y)
jump.fwd = 3       ;Jump forward Speed (x, y)
runjump.back = -3,-8.5 ;Running jump speeds (opt)
runjump.fwd = 5,-8.5      ;.
airjump.neu = 0,-8.5      ;.
airjump.back = -3      ;Air jump speeds (opt)
airjump.fwd = 3        ;.

[Movement]
airjump.num = 2      ;Number of air jumps allowed (opt)
airjump.height = 35  ;Minimum distance from ground before you can air jump (opt)
yaccel = .44         ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1 - Bow
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 191]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0

; You can delete the following two controllers if you're building your own
; character using KFM. These are the wood pieces that KFM kicks.
[State 191, Wood 1]
type = Explod
trigger1 = RoundState != 0
persistent = 0
anim = 191
postype = p1
pos = 260, -90
velocity = -4.2, -7
accel = 0, .32
removetime = 48

[State 191, Wood 2]
type = Explod
trigger1 = AnimElemTime(7) = 1
anim = 192
postype = p1
pos = 60, -70
velocity = 2, -4
accel = 0, .32
removetime = 35

; You can delete the following two controllers if you're building your own
; character using KFM. These play back the sounds of the wood block being
; broken.
[State 191, Snd 1]
type = PlaySnd
trigger1 = AnimElem = 7
value = F5,2
volume = -40

[State 191, Snd 2]
type = PlaySnd
trigger1 = AnimElemTime(7) = 3
value = F5,3
volume = -80

;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2

[State 195, 1]
type = CtrlSet
trigger1 = Time = 40
value = 1

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
[StateDef 200]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 200
poweradd = 20
sprpriority = 2

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 1
attr = S, NA
damage = 50
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 10, 10
sparkno = 0
sparkxy = -10, -76
hitsound = 5, 0
guardsound = 6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 200, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
[StateDef 210]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 210
poweradd = 20
sprpriority = 2

[State 210, 1]
type = HitDef
trigger1 = AnimElem = 1
attr = S, NA
damage = 60
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 10, 10
sparkno = 0
sparkxy = -10, -76
hitsound = 5, 0
guardsound = 6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 210, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
[StateDef 220]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 220
poweradd = 20
sprpriority = 2

[State 220, 1]
type = HitDef
trigger1 = AnimElem = 4
trigger2 = AnimElem = 5
attr = S, NA
damage = 70
animtype = Heavy
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 10, 10
sparkno = 0
sparkxy = -10, -76
hitsound = 5, 0
guardsound = 6, 0
ground.type = trip
ground.slidetime = 10
ground.hittime  = 15
ground.velocity = -14
airguard.velocity = -1.9,-.8
air.type = trip
air.velocity = -1.4,-3
air.hittime = 12

[State 220, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
;Tansformation
[Statedef 1000]
type = S
movetype= A
physics = S
anim = 1000
velset = 0,0
ctrl = 0

[State 1000, VarSet]
type = VarSet
trigger1 = AnimElem = 1
v = 0
value = 1

[State 1000, sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2, 13
volume = 100

[State 1000, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,1002
volume = 200


[State 1000,  2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Tansformation
[Statedef 2000]
type = S
movetype= A
physics = S
anim = 2000
velset = 0,0
ctrl = 0

[State 2000, VarSet]
type = VarSet
trigger1 = AnimElem = 1
v = 0
value = 2

[State 2000, sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2, 13
volume = 100

[State 2000, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,1002
volume = 200


[State 2000,  2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Tansformation
[Statedef 3000]
type = S
movetype= A
physics = S
anim = 3000
velset = 0,0
ctrl = 0

[State 3000, VarSet]
type = VarSet
trigger1 = AnimElem = 1
v = 0
value = 3

[State 3000, sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2, 13
volume = 100

[State 3000, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,1002
volume = 200


[State 3000,  2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Tansformation
[Statedef 4000]
type = S
movetype= A
physics = S
anim = 4000
velset = 0,0
ctrl = 0

[State 4000, VarSet]
type = VarSet
trigger1 = AnimElem = 1
v = 0
value = 4

[State 4000, sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2, 13
volume = 100

[State 4000, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,1002
volume = 200


[State 4000,  2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Tansformation
[Statedef 5000]
type = S
movetype= A
physics = S
anim = 5000
velset = 0,0
ctrl = 0

[State 5000, VarSet]
type = VarSet
trigger1 = AnimElem = 1
v = 0
value = 5

[State 5000, sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2, 13
volume = 100

[State 5000, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,1002
volume = 200


[State 5000,  2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Tansformation
[Statedef 6000]
type = S
movetype= A
physics = S
anim = 6000
velset = 0,0
ctrl = 0

[State 2000, VarSet]
type = VarSet
trigger1 = AnimElem = 1
v = 0
value = 6

[State 6000, sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2, 13
volume = 100

[State 6000, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,1002
volume = 200


[State 6000,  2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Tansformation
[Statedef 7000]
type = S
movetype= A
physics = S
anim = 7000
velset = 0,0
ctrl = 0

[State 7000, VarSet]
type = VarSet
trigger1 = AnimElem = 1
v = 0
value = 7

[State 7000, sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2, 13
volume = 100

[State 7000, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,1002
volume = 200


[State 7000,  2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Tansformation
[Statedef 8000]
type = S
movetype= A
physics = S
anim = 8000
velset = 0,0
ctrl = 0

[State 8000, VarSet]
type = VarSet
trigger1 = AnimElem = 1
v = 0
value = 8

[State 8000, sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2, 13
volume = 100

[State 8000, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,1002
volume = 200


[State 8000,  2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------
;charge
[Statedef 500]
type    = S
movetype= A
physics = S
velset = 0,0
anim = 500
ctrl = 0

[state 240, 1]
type = afterimage
trigger1 = animelem = 3
trigger2 = animelem = 4
time = 30
length = 10
palbright = 120,120,120
palcontrast = 300,300,300
paladd = 10,10,25
palmul = .65,.65,.75
timegap = 3
framegap = 2

[State 240, PowerAdd]
type = PowerAdd
trigger1 = ((GameTime%1) = 0)
value = 10

[state 240, changeanim]
type= changeanim
trigger1= Anim!=1211
trigger1= var(0)= 75
value= 1211

[State 240, 1]
type = CtrlSet
trigger1 = Command != "hc"
value = 1

[State 240, end]
type = ChangeState
trigger1 = (command != "hc")
value = 0
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

;This controller plays a sound everytime KFM lands from a jump, or
;from his back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
